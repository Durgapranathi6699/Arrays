class Solution {
    public List<Integer> majorityElement(int[] nums) {
       //  List<Integer> ans=new ArrayList<>();
        // HashMap<Integer,Integer> map=new HashMap<>();
        // for(int i=0;i<nums.length;i++){
        //     if(map.containsKey(nums[i])){
        //         map.put(nums[i],map.get(nums[i])+1);
        //     }else map.put(nums[i],1);}
        // for(Map.Entry<Integer,Integer> entry:map.entrySet()){
        //     if(entry.getValue() > nums.length/3) ans.add(entry.getKey()); }
        // return ans;
        List<Integer> res=new ArrayList<>();
        int Majority1=0;int Majority2=0;
        int count1=0;int count2=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==Majority1)  count1++;
           else if(nums[i]==Majority2)  count2++;
            else if(Majority1==0){
                Majority1=nums[i];
                count1=1;
                continue;}
            else if(Majority2==0){
                Majority2=nums[i];
                count2=1;
                continue;}
            else{
                count1--;count2--; }  }
       count1=0;count2=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==Majority1)  count1++;
               else if(nums[i]==Majority2) count2++;
         }
        if(count1>nums.length/3) res.add(Majority1);
        if(count2>nums.length/3)  res.add(Majority2);
           return res;
    }
}
    
