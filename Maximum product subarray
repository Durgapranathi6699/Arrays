class Solution {
    public int maxProduct(int[] nums) {
     int ans=Integer.MIN_VALUE;
        //our ans will be either in left or right subarray
        int product=1;
        for(int i=0;i<nums.length;i++){//left
           product=product*nums[i];
            ans=Math.max(ans,product);
            if(product==0){ product=1;
            }
        }
        product=1;
        for(int i=nums.length-1;i>=0;i--){//right
            product=product*nums[i];
            ans=Math.max(ans,product);
            if(product==0){  product=1;
            }
        }
        return ans;
    }
}
// //generate all posible subarray and check for max product
//         //O(N^2)
//         int max=Integer.MIN_VALUE;    
//         for(int i=0;i<nums.length;i++){
//             int p=1;
//             for(int j=i;j<nums.length;j++){
//                 p=p*nums[j];
//                  max=Math.max(max,p); } }
//         return max;
