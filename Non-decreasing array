https://leetcode.com/problems/non-decreasing-array/
class Solution {
    public boolean checkPossibility(int[] nums) {
        int pos=-1;
        for(int i=0;i<nums.length-1;i++){
            if(nums[i]>nums[i+1]){//condition to change the value
                if(pos!=-1){//2 nd time we are visiting the value to be changed which should be retured as false
                    return false;
                }
                pos=i;
            }
        }
        return pos==-1 || pos==0 || pos==nums.length-2 || nums[pos-1]<=nums[pos+1] || nums[pos]<=nums[pos+2];
    }
}
/*move pos to index where the condition is violating
if pos==-1 which means array is in ascending order no need of any changes which return true
 if pos==0 which means one elemnt at strat to be changed
 if pos==nums.length-2 it is at last which means all the elemnts before it are sorted in ascending onlty this elemnt needed to  be changed
 if we check only for side by side elemnts it may give answer as true but actually our array should follow 
 nums[pos-1]<=nums[pos+1] and nums[pos]<=nums[pos+2] these condition to be in ascending order
*/
