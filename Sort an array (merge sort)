class Solution {
    public int[] sortArray(int[] nums) {
       mergeSort(0,nums.length-1,nums);
        return nums;
    }
    void mergeSort(int start,int end,int nums[]){
        if(start>=end)return;
        int mid=start+(end-start)/2;
        mergeSort(start,mid,nums);
        mergeSort(mid+1,end,nums);
        merge(start,end,nums);
    }
    void merge(int start,int end,int nums[]){
        int mid=(start+end)/2;
        int l1=mid-start+1;
        int l2=end-mid;
        int a1[]=new int[l1];
        int a2[]=new int[l2];
        int temp=start;
        for(int i=0;i<l1;i++){//left half
            a1[i]=nums[temp++];
        }
        for(int i=0;i<l2;i++){//right half
            a2[i]=nums[temp++];
        }
        int i1=0;int i2=0;temp=start;//filling sorted data
        while(i1<l1 && i2<l2){
            nums[temp++]=a1[i1]<a2[i2]?a1[i1++]:a2[i2++];
        }
        while(i1<l1){
            nums[temp++]=a1[i1++];
        }
        while(i2<l2){
            nums[temp++]=a2[i2++];
        }
    }
}
