class Solution {
    public int removeDuplicates(int[] nums) {
      int l=1;
      for(int r=1;r<nums.length;r++){
            if(nums[r]!=nums[r-1]){
                nums[l]=nums[r];
                l++;
            }
        }
        return l;
    }
}
/*Set<Integer> set=new LinkedHashSet<>();
        for(int i=0;i<nums.length;i++){
            set.add(nums[i]);
        }
        List<Integer> l=new ArrayList<>(set);
        for(int j=0;j<l.size();j++){
         nums[j]=l.get(j);
       }
        return l.size();*/
/*0,0,1,1,1,2,2,3,3,4
  L
  R
  R CHECKS R AND R-1 SAME IF YES JUST MOVE
  0,0,1,1,1,2,2,3,3,4
    L
      R       NOWS R R-1 IF NOT EQUAL JUST STORE VALUE IN L POSITION AND MOVE
  0,0,1,1,1,2,2,3,3,4
      L
        R       AGAIN CHECK R R-1 EQUAL SO MOVE R
  0,0,1,1,1,2,2,3,3,4
      L
          R AGAIN MOVE
  0,0,1,1,1,2,2,3,3,4
      L
            R     (NOW R R-1 NOT EQUAL PLACE R VALUE IN L AND MOVE L)
  0,0,1,1,1,2,2,3,3,4
        L
              R  move r
   0,0,1,1,1,2,2,3,3,4
         L
                 R  r r-1 not equal place r in l move l ,r
   0,0,1,1,1,2,2,3,3,4
           L
                    R  move r
   0,0,1,1,1,2,2,3,3,4
           L
                     R replace r value in l move both thats the end */
    
